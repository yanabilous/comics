{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n  _s();\n\n  const {\n    loading,\n    request,\n    error,\n    clearError\n  } = useHttp();\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\n  const _apiKey = \"apikey=26bf773b3288c2d35df092385ce05b83\";\n  const _baseOffset = 210;\n\n  const getAllCharacters = async function () {\n    let offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _baseOffset;\n    const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n    return res.data.results.map(_transformCharacter);\n  };\n\n  const getCharacter = async id => {\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey} `);\n    return _transformCharacter(res.data.results[0]);\n  };\n\n  const _transformCharacter = char => {\n    return {\n      id: char.id,\n      name: char.name,\n      description: char.description ? `${char.description.slice(0, 210)}...` : \"There is no description for this character\",\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics: char.comics.items\n    };\n  };\n\n  const getCharacterByName = async name => {\n    const res = await request(`${_apiBase}characters/${name}?${_apiKey} `);\n    return _transformCharacter(res.data.results[0]);\n  };\n\n  return {\n    loading,\n    error,\n    getAllCharacters,\n    getCharacter,\n    getCharacterByName,\n    clearError\n  };\n};\n\n_s(useMarvelService, \"9hyEhuOfcolEaHPbDIyQe2OeeLY=\", false, function () {\n  return [useHttp];\n});\n\nexport default useMarvelService;","map":{"version":3,"names":["useHttp","useMarvelService","loading","request","error","clearError","_apiBase","_apiKey","_baseOffset","getAllCharacters","offset","res","data","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","url","wiki","comics","items","getCharacterByName"],"sources":["/Users/bilous/Projects/umka/marvel_starter/src/services/MarvelService.js"],"sourcesContent":["import {useHttp} from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n    const {loading, request, error, clearError} = useHttp();\n    const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\n    const _apiKey = \"apikey=26bf773b3288c2d35df092385ce05b83\";\n    const _baseOffset = 210;\n\n\n    const getAllCharacters = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter);\n    };\n    const getCharacter = async (id) => {\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey} `);\n        return _transformCharacter(res.data.results[0]);\n    };\n    const _transformCharacter = (char) => {\n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description ? `${char.description.slice(0, 210)}...` : \"There is no description for this character\",\n            thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items\n        };\n\n    };\n    const getCharacterByName = async (name) => {\n        const res = await request(`${_apiBase}characters/${name}?${_apiKey} `);\n        return _transformCharacter(res.data.results[0]);\n    };\n    return {loading, error, getAllCharacters, getCharacter, getCharacterByName, clearError};\n};\n\nexport default useMarvelService;"],"mappings":";;AAAA,SAAQA,OAAR,QAAsB,oBAAtB;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;EAAA;;EAC3B,MAAM;IAACC,OAAD;IAAUC,OAAV;IAAmBC,KAAnB;IAA0BC;EAA1B,IAAwCL,OAAO,EAArD;EACA,MAAMM,QAAQ,GAAG,2CAAjB;EACA,MAAMC,OAAO,GAAG,yCAAhB;EACA,MAAMC,WAAW,GAAG,GAApB;;EAGA,MAAMC,gBAAgB,GAAG,kBAAgC;IAAA,IAAzBC,MAAyB,uEAAhBF,WAAgB;IACrD,MAAMG,GAAG,GAAG,MAAMR,OAAO,CAAE,GAAEG,QAAS,6BAA4BI,MAAO,IAAGH,OAAQ,EAA3D,CAAzB;IACA,OAAOI,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiBC,GAAjB,CAAqBC,mBAArB,CAAP;EACH,CAHD;;EAIA,MAAMC,YAAY,GAAG,MAAOC,EAAP,IAAc;IAC/B,MAAMN,GAAG,GAAG,MAAMR,OAAO,CAAE,GAAEG,QAAS,cAAaW,EAAG,IAAGV,OAAQ,GAAxC,CAAzB;IACA,OAAOQ,mBAAmB,CAACJ,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiB,CAAjB,CAAD,CAA1B;EACH,CAHD;;EAIA,MAAME,mBAAmB,GAAIG,IAAD,IAAU;IAClC,OAAO;MACHD,EAAE,EAAEC,IAAI,CAACD,EADN;MAEHE,IAAI,EAAED,IAAI,CAACC,IAFR;MAGHC,WAAW,EAAEF,IAAI,CAACE,WAAL,GAAoB,GAAEF,IAAI,CAACE,WAAL,CAAiBC,KAAjB,CAAuB,CAAvB,EAA0B,GAA1B,CAA+B,KAArD,GAA4D,4CAHtE;MAIHC,SAAS,EAAEJ,IAAI,CAACI,SAAL,CAAeC,IAAf,GAAsB,GAAtB,GAA4BL,IAAI,CAACI,SAAL,CAAeE,SAJnD;MAKHC,QAAQ,EAAEP,IAAI,CAACQ,IAAL,CAAU,CAAV,EAAaC,GALpB;MAMHC,IAAI,EAAEV,IAAI,CAACQ,IAAL,CAAU,CAAV,EAAaC,GANhB;MAOHE,MAAM,EAAEX,IAAI,CAACW,MAAL,CAAYC;IAPjB,CAAP;EAUH,CAXD;;EAYA,MAAMC,kBAAkB,GAAG,MAAOZ,IAAP,IAAgB;IACvC,MAAMR,GAAG,GAAG,MAAMR,OAAO,CAAE,GAAEG,QAAS,cAAaa,IAAK,IAAGZ,OAAQ,GAA1C,CAAzB;IACA,OAAOQ,mBAAmB,CAACJ,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiB,CAAjB,CAAD,CAA1B;EACH,CAHD;;EAIA,OAAO;IAACX,OAAD;IAAUE,KAAV;IAAiBK,gBAAjB;IAAmCO,YAAnC;IAAiDe,kBAAjD;IAAqE1B;EAArE,CAAP;AACH,CAhCD;;GAAMJ,gB;UAC4CD,O;;;AAiClD,eAAeC,gBAAf"},"metadata":{},"sourceType":"module"}