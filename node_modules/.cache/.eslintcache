[{"/Users/bilous/Projects/umka/marvel_starter/src/index.js":"1","/Users/bilous/Projects/umka/marvel_starter/src/components/app/App.js":"2","/Users/bilous/Projects/umka/marvel_starter/src/components/appHeader/AppHeader.js":"3","/Users/bilous/Projects/umka/marvel_starter/src/components/pages/index.js":"4","/Users/bilous/Projects/umka/marvel_starter/src/components/pages/ComicsPage.js":"5","/Users/bilous/Projects/umka/marvel_starter/src/components/pages/MainPage.js":"6","/Users/bilous/Projects/umka/marvel_starter/src/components/appBanner/AppBanner.js":"7","/Users/bilous/Projects/umka/marvel_starter/src/components/comicsList/ComicsList.js":"8","/Users/bilous/Projects/umka/marvel_starter/src/components/randomChar/RandomChar.js":"9","/Users/bilous/Projects/umka/marvel_starter/src/components/errorBoundary/ErrorBoundary.js":"10","/Users/bilous/Projects/umka/marvel_starter/src/components/charList/CharList.js":"11","/Users/bilous/Projects/umka/marvel_starter/src/components/charInfo/CharInfo.js":"12","/Users/bilous/Projects/umka/marvel_starter/src/services/ComicsService.js":"13","/Users/bilous/Projects/umka/marvel_starter/src/components/errorMessage/ErrorMessage.js":"14","/Users/bilous/Projects/umka/marvel_starter/src/services/MarvelService.js":"15","/Users/bilous/Projects/umka/marvel_starter/src/components/spinner/Spinner.js":"16","/Users/bilous/Projects/umka/marvel_starter/src/components/skeleton/Skeleton.js":"17","/Users/bilous/Projects/umka/marvel_starter/src/hooks/http.hook.js":"18","/Users/bilous/Projects/umka/marvel_starter/src/components/pages/404.js":"19","/Users/bilous/Projects/umka/marvel_starter/src/components/charList/someFunk.js":"20","/Users/bilous/Projects/umka/marvel_starter/src/components/charSearchForm/CharSearchForm.js":"21","/Users/bilous/Projects/umka/marvel_starter/src/components/pages/SinglePage.js":"22","/Users/bilous/Projects/umka/marvel_starter/src/components/pages/singleComicLayout/SingleComicLayout.js":"23","/Users/bilous/Projects/umka/marvel_starter/src/components/pages/singleCharacterLayout/SingleCharacterLayout.js":"24","/Users/bilous/Projects/comics/src/index.js":"25","/Users/bilous/Projects/comics/src/components/app/App.js":"26","/Users/bilous/Projects/comics/src/components/pages/404.js":"27","/Users/bilous/Projects/comics/src/components/appHeader/AppHeader.js":"28","/Users/bilous/Projects/comics/src/components/pages/SinglePage.js":"29","/Users/bilous/Projects/comics/src/components/pages/ComicsPage.js":"30","/Users/bilous/Projects/comics/src/components/spinner/Spinner.js":"31","/Users/bilous/Projects/comics/src/components/pages/singleComicLayout/SingleComicLayout.js":"32","/Users/bilous/Projects/comics/src/components/pages/MainPage.js":"33","/Users/bilous/Projects/comics/src/components/pages/singleCharacterLayout/SingleCharacterLayout.js":"34","/Users/bilous/Projects/comics/src/components/errorMessage/ErrorMessage.js":"35","/Users/bilous/Projects/comics/src/components/appBanner/AppBanner.js":"36","/Users/bilous/Projects/comics/src/components/comicsList/ComicsList.js":"37","/Users/bilous/Projects/comics/src/services/MarvelService.js":"38","/Users/bilous/Projects/comics/src/components/charSearchForm/CharSearchForm.js":"39","/Users/bilous/Projects/comics/src/components/charList/CharList.js":"40","/Users/bilous/Projects/comics/src/components/charInfo/CharInfo.js":"41","/Users/bilous/Projects/comics/src/components/errorBoundary/ErrorBoundary.js":"42","/Users/bilous/Projects/comics/src/components/randomChar/RandomChar.js":"43","/Users/bilous/Projects/comics/src/services/ComicsService.js":"44","/Users/bilous/Projects/comics/src/components/charList/someFunk.js":"45","/Users/bilous/Projects/comics/src/components/skeleton/Skeleton.js":"46","/Users/bilous/Projects/comics/src/hooks/http.hook.js":"47"},{"size":252,"mtime":1654877108382,"results":"48","hashOfConfig":"49"},{"size":2952,"mtime":1657016402644,"results":"50","hashOfConfig":"49"},{"size":717,"mtime":1657016552394,"results":"51","hashOfConfig":"49"},{"size":208,"mtime":1654980825061,"results":"52","hashOfConfig":"53"},{"size":249,"mtime":1654762956818,"results":"54","hashOfConfig":"49"},{"size":1216,"mtime":1657016858390,"results":"55","hashOfConfig":"49"},{"size":522,"mtime":1629627299000,"results":"56","hashOfConfig":"49"},{"size":8913,"mtime":1654980257696,"results":"57","hashOfConfig":"49"},{"size":2962,"mtime":1654029714696,"results":"58","hashOfConfig":"49"},{"size":577,"mtime":1654804903131,"results":"59","hashOfConfig":"49"},{"size":6933,"mtime":1655124890401,"results":"60","hashOfConfig":"49"},{"size":3042,"mtime":1657038017388,"results":"61","hashOfConfig":"49"},{"size":1705,"mtime":1655031720416,"results":"62","hashOfConfig":"49"},{"size":249,"mtime":1651569857554,"results":"63","hashOfConfig":"49"},{"size":1489,"mtime":1656573573365,"results":"64","hashOfConfig":"49"},{"size":4551,"mtime":1651516276475,"results":"65","hashOfConfig":"49"},{"size":666,"mtime":1629627051000,"results":"66","hashOfConfig":"49"},{"size":891,"mtime":1654017689293,"results":"67","hashOfConfig":"49"},{"size":432,"mtime":1654892849283,"results":"68","hashOfConfig":"49"},{"size":126,"mtime":1655124797969,"results":"69","hashOfConfig":"49"},{"size":2811,"mtime":1657013950971,"results":"70","hashOfConfig":"49"},{"size":1747,"mtime":1657014845781,"results":"71","hashOfConfig":"49"},{"size":876,"mtime":1657015097765,"results":"72","hashOfConfig":"49"},{"size":529,"mtime":1657014986356,"results":"73","hashOfConfig":"49"},{"size":252,"mtime":1654877108382,"results":"74","hashOfConfig":"75"},{"size":2952,"mtime":1657016402644,"results":"76","hashOfConfig":"75"},{"size":432,"mtime":1654892849283,"results":"77","hashOfConfig":"75"},{"size":717,"mtime":1657016552394,"results":"78","hashOfConfig":"75"},{"size":1747,"mtime":1657014845781,"results":"79","hashOfConfig":"75"},{"size":249,"mtime":1654762956818,"results":"80","hashOfConfig":"75"},{"size":4551,"mtime":1651516276475,"results":"81","hashOfConfig":"75"},{"size":876,"mtime":1657015097765,"results":"82","hashOfConfig":"75"},{"size":1216,"mtime":1657016858390,"results":"83","hashOfConfig":"75"},{"size":529,"mtime":1657014986356,"results":"84","hashOfConfig":"75"},{"size":249,"mtime":1651569857554,"results":"85","hashOfConfig":"75"},{"size":522,"mtime":1629627299000,"results":"86","hashOfConfig":"75"},{"size":8913,"mtime":1654980257696,"results":"87","hashOfConfig":"75"},{"size":1489,"mtime":1656573573365,"results":"88","hashOfConfig":"75"},{"size":2811,"mtime":1657013950971,"results":"89","hashOfConfig":"75"},{"size":6933,"mtime":1655124890401,"results":"90","hashOfConfig":"75"},{"size":3042,"mtime":1657038017388,"results":"91","hashOfConfig":"75"},{"size":577,"mtime":1654804903131,"results":"92","hashOfConfig":"75"},{"size":2962,"mtime":1654029714696,"results":"93","hashOfConfig":"75"},{"size":1705,"mtime":1655031720416,"results":"94","hashOfConfig":"75"},{"size":126,"mtime":1655124797969,"results":"95","hashOfConfig":"75"},{"size":666,"mtime":1629627051000,"results":"96","hashOfConfig":"75"},{"size":891,"mtime":1654017689293,"results":"97","hashOfConfig":"75"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hm2yyi",{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"1io9cl6",{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dm44ho",{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bilous/Projects/umka/marvel_starter/src/index.js",[],"/Users/bilous/Projects/umka/marvel_starter/src/components/app/App.js",[],"/Users/bilous/Projects/umka/marvel_starter/src/components/appHeader/AppHeader.js",[],"/Users/bilous/Projects/umka/marvel_starter/src/components/pages/index.js",[],["198","199"],"/Users/bilous/Projects/umka/marvel_starter/src/components/pages/ComicsPage.js",[],"/Users/bilous/Projects/umka/marvel_starter/src/components/pages/MainPage.js",[],"/Users/bilous/Projects/umka/marvel_starter/src/components/appBanner/AppBanner.js",[],"/Users/bilous/Projects/umka/marvel_starter/src/components/comicsList/ComicsList.js",["200","201","202"],"import \"./comicsList.scss\";\nimport {useState, useEffect, useRef} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Link } from \"react-router-dom\";\nimport useComicsService from \"../../services/ComicsService\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport Spinner from \"../spinner/Spinner\";\n\nconst ComicsList = (props) => {\n    console.log(\"ComicsList\");\n    const [comicsList, setComicsList] = useState([]);\n    const {loading, error, getAllComics} = useComicsService();\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, []);\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded);\n    };\n\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n        // console.log(newComicsList);\n        // console.log([...comicsList, ...newComicsList]);\n\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 8);\n        setComicsEnded(comicsEnded => ended);\n    };\n    // const itemRefs = useRef([]);\n    //\n    // const focusOnItem = (id) => {\n    //     itemRefs.current.forEach(item => item.classList.remove(\"comics__item_selected\"));\n    //     itemRefs.current[id].classList.add(\"comics__item_selected\");\n    //     itemRefs.current[id].focus();\n    // };\n\n\n\n\n    function renderItems (arr) {\n        const items = arr.map((item, i) => {\n            return (\n                <li className=\"comics__item\" key={i}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(comicsList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button\n                disabled={newItemLoading}\n                style={{'display' : comicsEnded ? 'none' : 'block'}}\n                className=\"button button__main button__long\"\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n    // function renderItems(arr) {\n    //     const items = arr.map((item, i) => {\n    //         let imgStyle = {\"objectFit\": \"cover\"};\n    //         if (item.thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") {\n    //             imgStyle = {\"objectFit\": \"unset\"};\n    //         }\n    //\n    //         return (\n    //             <li\n    //                 className=\"comics__item\"\n    //                 key={i}\n    //                 tabIndex={0}\n    //                 // ref={el => itemRefs.current[i] = el}\n    //                 // key={item.id}\n    //                 onClick={() => {\n    //                     props.onComicsSelected(item.id);\n    //                     // focusOnItem(i);\n    //                 }}\n    //                 onKeyPress={(e) => {\n    //                     if (e.key === \" \" || e.key === \"Enter\") {\n    //                         props.onComicsSelected(item.id);\n    //                         // focusOnItem(i);\n    //                     }\n    //                 }}>\n    //                 <img src={item.thumbnail} alt={item.name} style={imgStyle} className=\"comics__item-img\"/>\n    //                 <div className=\"comics__item-name\">{item.title}</div>\n    //                 <div className=\"comics__item-price\">{item.prices[0].price}</div>\n    //\n    //             </li>\n    //         );\n    //     });\n    //\n    //     return (\n    //         <ul className=\"comics__grid\">\n    //             {items}\n    //         </ul>\n    //     );\n    // }\n    //\n    // const items = renderItems(comicsList);\n    //\n    // const errorMessage = error ? <ErrorMessage/> : null;\n    // const spinner = loading && !newItemLoading ? <Spinner/> : null;\n    //\n    // return (\n    //\n    //     <div className=\"comics__list\">\n    //         {errorMessage}\n    //         {spinner}\n    //         {items}\n    //         <button\n    //             className=\"button button__main button__long\"\n    //             disabled={newItemLoading}\n    //             style={{\"display\": comicsEnded ? \"none\" : \"block\"}}\n    //             onClick={() => onRequest(offset)}>\n    //             <div className=\"inner\">load more</div>\n    //         </button>\n    //     </div>\n    // );\n    //\n\n    // return (\n    //     <div className=\"comics__list\">\n    //         <ul className=\"comics__grid\">\n    //             <li className=\"comics__item\">\n    //                 <a href=\"#\">\n    //                     <img src={uw} alt=\"ultimate war\" className=\"comics__item-img\"/>\n    //                     <div className=\"comics__item-name\">ULTIMATE X-MEN VOL. 5: ULTIMATE WAR TPB</div>\n    //                     <div className=\"comics__item-price\">9.99$</div>\n    //                 </a>\n    //             </li>\n    //             <li className=\"comics__item\">\n    //                 <a href=\"#\">\n    //                     <img src={xMen} alt=\"x-men\" className=\"comics__item-img\"/>\n    //                     <div className=\"comics__item-name\">X-Men: Days of Future Past</div>\n    //                     <div className=\"comics__item-price\">NOT AVAILABLE</div>\n    //                 </a>\n    //             </li>\n    //             <li className=\"comics__item\">\n    //                 <a href=\"#\">\n    //                     <img src={uw} alt=\"ultimate war\" className=\"comics__item-img\"/>\n    //                     <div className=\"comics__item-name\">ULTIMATE X-MEN VOL. 5: ULTIMATE WAR TPB</div>\n    //                     <div className=\"comics__item-price\">9.99$</div>\n    //                 </a>\n    //             </li>\n    //             <li className=\"comics__item\">\n    //                 <a href=\"#\">\n    //                     <img src={xMen} alt=\"x-men\" className=\"comics__item-img\"/>\n    //                     <div className=\"comics__item-name\">X-Men: Days of Future Past</div>\n    //                     <div className=\"comics__item-price\">NOT AVAILABLE</div>\n    //                 </a>\n    //             </li>\n    //             <li className=\"comics__item\">\n    //                 <a href=\"#\">\n    //                     <img src={uw} alt=\"ultimate war\" className=\"comics__item-img\"/>\n    //                     <div className=\"comics__item-name\">ULTIMATE X-MEN VOL. 5: ULTIMATE WAR TPB</div>\n    //                     <div className=\"comics__item-price\">9.99$</div>\n    //                 </a>\n    //             </li>\n    //             <li className=\"comics__item\">\n    //                 <a href=\"#\">\n    //                     <img src={xMen} alt=\"x-men\" className=\"comics__item-img\"/>\n    //                     <div className=\"comics__item-name\">X-Men: Days of Future Past</div>\n    //                     <div className=\"comics__item-price\">NOT AVAILABLE</div>\n    //                 </a>\n    //             </li>\n    //             <li className=\"comics__item\">\n    //                 <a href=\"#\">\n    //                     <img src={uw} alt=\"ultimate war\" className=\"comics__item-img\"/>\n    //                     <div className=\"comics__item-name\">ULTIMATE X-MEN VOL. 5: ULTIMATE WAR TPB</div>\n    //                     <div className=\"comics__item-price\">9.99$</div>\n    //                 </a>\n    //             </li>\n    //             <li className=\"comics__item\">\n    //                 <a href=\"#\">\n    //                     <img src={xMen} alt=\"x-men\" className=\"comics__item-img\"/>\n    //                     <div className=\"comics__item-name\">X-Men: Days of Future Past</div>\n    //                     <div className=\"comics__item-price\">NOT AVAILABLE</div>\n    //                 </a>\n    //             </li>\n    //         </ul>\n    //         <button className=\"button button__main button__long\">\n    //             <div className=\"inner\">load more</div>\n    //         </button>\n    //     </div>\n    // );\n};\n\n// ComicsList.propTypes = {\n//     onComicsSelected: PropTypes.func.isRequired\n// };\n\nexport default ComicsList;","/Users/bilous/Projects/umka/marvel_starter/src/components/randomChar/RandomChar.js",["203","204"],"import {useState, useEffect} from \"react\";\nimport MarvelService from \"../../services/MarvelService\";\n\nimport \"./randomChar.scss\";\nimport mjolnir from \"../../resources/img/mjolnir.png\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport useMarvelService from \"../../services/MarvelService\";\n\n\nconst RandomChar = (props) => {\n    const [char, setChar] = useState({});\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n\n    useEffect(() => {\n        updateChar();\n        const timerId = setInterval(updateChar, 60000);\n\n        return () => {\n            clearInterval(timerId);\n        };\n    }, []);\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    };\n\n    const updateChar = () => {\n        clearError();\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n\n        getCharacter(id)\n            .then(onCharLoaded)\n\n    };\n\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error) ? <View char={char}/> : null;\n\n\n    return (\n        <div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button className=\"button button__main\" onClick={updateChar}>\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    );\n\n\n};\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {\"objectFit\": \"cover\"};\n    if (thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") {\n        imgStyle = {\"objectFit\": \"contain\"};\n    }\n\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">{description}</p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default RandomChar;","/Users/bilous/Projects/umka/marvel_starter/src/components/errorBoundary/ErrorBoundary.js",[],"/Users/bilous/Projects/umka/marvel_starter/src/components/charList/CharList.js",["205","206","207"],"import \"./charList.scss\";\nimport {useState, useEffect, useRef} from \"react\";\nimport PropTypes from \"prop-types\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport {logger, secondLog} from \"./someFunk\";\n\n\nconst CharList = (props) => {\n    console.log(\"CharList\");\n    const [charList, setCharList] = useState([]);\n    const {loading, error, getAllCharacters} = useMarvelService();\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [charEnded, setCharEnded] = useState(false);\n\n\n    useEffect(() => {\n        console.log(\"useEffect\");\n        onRequest(offset, true);\n    }, []);\n\n\n    const onRequest = (offset, initial) => {\n        console.log(\"onRequest\");\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllCharacters(offset)\n            .then(onCharListLoaded);\n\n    };\n\n\n    const onCharListLoaded = (newCharList) => {\n\n        // const {logger, secondLog} = await import('./someFunk');\n        // logger();\n        // secondLog();\n\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n        setCharList(charList => [...charList, ...newCharList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 9);\n        setCharEnded(charEnded => ended);\n    };\n\n\n    const itemRefs = useRef([]);\n\n    const focusOnItem = (id) => {\n        // Я реализовал вариант чуть сложнее, и с классом и с фокусом\n        // Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\n        // На самом деле, решение с css-классом можно сделать, вынеся персонажа\n        // в отдельный компонент. Но кода будет больше, появится новое состояние\n        // и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\n\n        // По возможности, не злоупотребляйте рефами, только в крайних случаях\n        itemRefs.current.forEach(item => item.classList.remove(\"char__item_selected\"));\n        itemRefs.current[id].classList.add(\"char__item_selected\");\n        itemRefs.current[id].focus();\n    };\n\n    // Этот метод создан для оптимизации,\n    // чтобы не помещать такую конструкцию в метод render\n\n    function renderItems(arr) {\n        console.log(arr.length);\n        const items = arr.map((item, i) => {\n            let imgStyle = {\"objectFit\": \"cover\"};\n            if (item.thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") {\n                imgStyle = {\"objectFit\": \"unset\"};\n            }\n\n            return (\n                <li\n                    className=\"char__item\"\n                    tabIndex={0}\n                    ref={el => itemRefs.current[i] = el}\n                    key={item.id}\n                    onClick={() => {\n                        props.onCharSelected(item.id);\n                        focusOnItem(i);\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === \" \" || e.key === \"Enter\") {\n                            props.onCharSelected(item.id);\n                            focusOnItem(i);\n                        }\n                    }}>\n                    <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                    <div className=\"char__name\">{item.name}</div>\n\n                </li>\n            );\n        });\n\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        );\n    }\n\n    const items = renderItems(charList);\n    // const items = <span>123</span>;\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    if (loading) {\n        import(\"./someFunk\")\n            .then(obj => obj.default())\n            .catch();\n    }\n    return (\n\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button\n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{\"display\": charEnded ? \"none\" : \"block\"}}\n                onClick={() => onRequest(offset)}\n            >\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    );\n\n\n    // return (\n    //     <div className=\"char__list\">\n    //         <ul className=\"char__grid\">\n    //             <li className=\"char__item\">\n    //                 <img src={abyss} alt=\"abyss\"/>\n    //                 <div className=\"char__name\">Abyss</div>\n    //             </li>\n    //             <li className=\"char__item char__item_selected\">\n    //                 <img src={abyss} alt=\"abyss\"/>\n    //                 <div className=\"char__name\">Abyss</div>\n    //             </li>\n    //             <li className=\"char__item\">\n    //                 <img src={abyss} alt=\"abyss\"/>\n    //                 <div className=\"char__name\">Abyss</div>\n    //             </li>\n    //             <li className=\"char__item\">\n    //                 <img src={abyss} alt=\"abyss\"/>\n    //                 <div className=\"char__name\">Abyss</div>\n    //             </li>\n    //             <li className=\"char__item\">\n    //                 <img src={abyss} alt=\"abyss\"/>\n    //                 <div className=\"char__name\">Abyss</div>\n    //             </li>\n    //             <li className=\"char__item\">\n    //                 <img src={abyss} alt=\"abyss\"/>\n    //                 <div className=\"char__name\">Abyss</div>\n    //             </li>\n    //             <li className=\"char__item\">\n    //                 <img src={abyss} alt=\"abyss\"/>\n    //                 <div className=\"char__name\">Abyss</div>\n    //             </li>\n    //             <li className=\"char__item\">\n    //                 <img src={abyss} alt=\"abyss\"/>\n    //                 <div className=\"char__name\">Abyss</div>\n    //             </li>\n    //             <li className=\"char__item\">\n    //                 <img src={abyss} alt=\"abyss\"/>\n    //                 <div className=\"char__name\">Abyss</div>\n    //             </li>\n    //         </ul>\n    //         <button className=\"button button__main button__long\">\n    //             <div className=\"inner\">load more</div>\n    //         </button>\n    //     </div>\n    // )\n};\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n};\n\nexport default CharList;","/Users/bilous/Projects/umka/marvel_starter/src/components/charInfo/CharInfo.js",["208"],"import {useState, useEffect} from \"react\";\nimport PropTypes from \"prop-types\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport Spinner from \"../spinner/Spinner\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport Skeleton from \"../skeleton/Skeleton\";\n\nimport \"./charInfo.scss\";\n\nconst CharInfo = (props) => {\n    const [char, setChar] = useState(null);\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n\n    useEffect(() => {\n        updateChar();\n    }, [props.charId]);\n\n    const updateChar = () => {\n        const {charId} = props;\n        if (!charId) {\n            return;\n        }\n        clearError();\n        getCharacter(charId)\n            .then(onCharLoaded);\n\n\n    };\n\n    const onCharLoaded = (char) => {\n\n        setChar(char);\n\n\n    };\n\n    const skeleton = (char || loading || error) ? null : <Skeleton/>;\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\n    return (<div>\n        <div className=\"char__info\">\n            {skeleton}\n            {errorMessage}\n            {spinner}\n            {content}\n\n        </div>\n\n        </div>\n    );\n\n};\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n    let imgStyle = {\"objectFit\": \"cover\"};\n    if (thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") {\n        imgStyle = {\"objectFit\": \"contain\"};\n    }\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : \"There is no comics with this character\"}\n                {\n                    comics.map((item, i) => {\n                        // eslint-disable-next-line\n                        if (i > 9) return;\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        );\n                    })\n                }\n\n\n            </ul>\n\n        </>\n    );\n};\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n};\n\nexport default CharInfo;","/Users/bilous/Projects/umka/marvel_starter/src/services/ComicsService.js",[],"/Users/bilous/Projects/umka/marvel_starter/src/components/errorMessage/ErrorMessage.js",[],"/Users/bilous/Projects/umka/marvel_starter/src/services/MarvelService.js",[],"/Users/bilous/Projects/umka/marvel_starter/src/components/spinner/Spinner.js",[],"/Users/bilous/Projects/umka/marvel_starter/src/components/skeleton/Skeleton.js",[],"/Users/bilous/Projects/umka/marvel_starter/src/hooks/http.hook.js",[],"/Users/bilous/Projects/umka/marvel_starter/src/components/pages/404.js",[],"/Users/bilous/Projects/umka/marvel_starter/src/components/charList/someFunk.js",[],"/Users/bilous/Projects/umka/marvel_starter/src/components/charSearchForm/CharSearchForm.js",[],"/Users/bilous/Projects/umka/marvel_starter/src/components/pages/SinglePage.js",["209","210"],"import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport AppBanner from \"../appBanner/AppBanner\";\n\n// Хотелось бы вынести функцию по загрузке данных как отдельный аргумент\n// Но тогда мы потеряем связь со стэйтами загрузки и ошибки\n// А если вынесем их все в App.js - то они будут одни на все страницы\n\nconst SinglePage = ({Component, dataType}) => {\n        const {id} = useParams();\n        const [data, setData] = useState(null);\n        const {loading, error, getComic, getCharacter, clearError} = useMarvelService();\n\n        useEffect(() => {\n            updateData()\n        }, [id])\n\n        const updateData = () => {\n            clearError();\n\n            switch (dataType) {\n                case 'comic':\n                    getComic(id).then(onDataLoaded);\n                    break;\n                case 'character':\n                    getCharacter(id).then(onDataLoaded);\n            }\n        }\n\n        const onDataLoaded = (data) => {\n            setData(data);\n        }\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error || !data) ? <Component data={data}/> : null;\n\n        return (\n            <>\n                <AppBanner/>\n                {errorMessage}\n                {spinner}\n                {content}\n            </>\n        )\n}\n\nexport default SinglePage;","/Users/bilous/Projects/umka/marvel_starter/src/components/pages/singleComicLayout/SingleComicLayout.js",[],"/Users/bilous/Projects/umka/marvel_starter/src/components/pages/singleCharacterLayout/SingleCharacterLayout.js",[],"/Users/bilous/Projects/comics/src/index.js",[],"/Users/bilous/Projects/comics/src/components/app/App.js",[],"/Users/bilous/Projects/comics/src/components/pages/404.js",[],"/Users/bilous/Projects/comics/src/components/appHeader/AppHeader.js",[],"/Users/bilous/Projects/comics/src/components/pages/SinglePage.js",["211","212"],"/Users/bilous/Projects/comics/src/components/pages/ComicsPage.js",[],"/Users/bilous/Projects/comics/src/components/spinner/Spinner.js",[],"/Users/bilous/Projects/comics/src/components/pages/singleComicLayout/SingleComicLayout.js",[],"/Users/bilous/Projects/comics/src/components/pages/MainPage.js",[],"/Users/bilous/Projects/comics/src/components/pages/singleCharacterLayout/SingleCharacterLayout.js",[],"/Users/bilous/Projects/comics/src/components/errorMessage/ErrorMessage.js",[],"/Users/bilous/Projects/comics/src/components/appBanner/AppBanner.js",[],"/Users/bilous/Projects/comics/src/components/comicsList/ComicsList.js",["213","214","215"],"/Users/bilous/Projects/comics/src/services/MarvelService.js",[],"/Users/bilous/Projects/comics/src/components/charSearchForm/CharSearchForm.js",[],"/Users/bilous/Projects/comics/src/components/charList/CharList.js",["216","217","218"],"/Users/bilous/Projects/comics/src/components/charInfo/CharInfo.js",["219"],"/Users/bilous/Projects/comics/src/components/errorBoundary/ErrorBoundary.js",[],"/Users/bilous/Projects/comics/src/components/randomChar/RandomChar.js",["220","221"],"/Users/bilous/Projects/comics/src/services/ComicsService.js",[],"/Users/bilous/Projects/comics/src/components/charList/someFunk.js",[],"/Users/bilous/Projects/comics/src/components/skeleton/Skeleton.js",[],"/Users/bilous/Projects/comics/src/hooks/http.hook.js",[],{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","severity":1,"message":"227","line":2,"column":30,"nodeType":"228","messageId":"229","endLine":2,"endColumn":36},{"ruleId":"226","severity":1,"message":"230","line":3,"column":8,"nodeType":"228","messageId":"229","endLine":3,"endColumn":17},{"ruleId":"231","severity":1,"message":"232","line":20,"column":8,"nodeType":"233","endLine":20,"endColumn":10,"suggestions":"234"},{"ruleId":"226","severity":1,"message":"235","line":2,"column":8,"nodeType":"228","messageId":"229","endLine":2,"endColumn":21},{"ruleId":"231","severity":1,"message":"236","line":23,"column":8,"nodeType":"233","endLine":23,"endColumn":10,"suggestions":"237"},{"ruleId":"226","severity":1,"message":"238","line":7,"column":9,"nodeType":"228","messageId":"229","endLine":7,"endColumn":15},{"ruleId":"226","severity":1,"message":"239","line":7,"column":17,"nodeType":"228","messageId":"229","endLine":7,"endColumn":26},{"ruleId":"231","severity":1,"message":"232","line":22,"column":8,"nodeType":"233","endLine":22,"endColumn":10,"suggestions":"240"},{"ruleId":"231","severity":1,"message":"236","line":17,"column":8,"nodeType":"233","endLine":17,"endColumn":22,"suggestions":"241"},{"ruleId":"231","severity":1,"message":"242","line":20,"column":12,"nodeType":"233","endLine":20,"endColumn":16,"suggestions":"243"},{"ruleId":"244","severity":1,"message":"245","line":25,"column":13,"nodeType":"246","messageId":"247","endLine":31,"endColumn":14},{"ruleId":"231","severity":1,"message":"242","line":20,"column":12,"nodeType":"233","endLine":20,"endColumn":16,"suggestions":"248"},{"ruleId":"244","severity":1,"message":"245","line":25,"column":13,"nodeType":"246","messageId":"247","endLine":31,"endColumn":14},{"ruleId":"226","severity":1,"message":"227","line":2,"column":30,"nodeType":"228","messageId":"229","endLine":2,"endColumn":36},{"ruleId":"226","severity":1,"message":"230","line":3,"column":8,"nodeType":"228","messageId":"229","endLine":3,"endColumn":17},{"ruleId":"231","severity":1,"message":"232","line":20,"column":8,"nodeType":"233","endLine":20,"endColumn":10,"suggestions":"249"},{"ruleId":"226","severity":1,"message":"238","line":7,"column":9,"nodeType":"228","messageId":"229","endLine":7,"endColumn":15},{"ruleId":"226","severity":1,"message":"239","line":7,"column":17,"nodeType":"228","messageId":"229","endLine":7,"endColumn":26},{"ruleId":"231","severity":1,"message":"232","line":22,"column":8,"nodeType":"233","endLine":22,"endColumn":10,"suggestions":"250"},{"ruleId":"231","severity":1,"message":"236","line":17,"column":8,"nodeType":"233","endLine":17,"endColumn":22,"suggestions":"251"},{"ruleId":"226","severity":1,"message":"235","line":2,"column":8,"nodeType":"228","messageId":"229","endLine":2,"endColumn":21},{"ruleId":"231","severity":1,"message":"236","line":23,"column":8,"nodeType":"233","endLine":23,"endColumn":10,"suggestions":"252"},"no-native-reassign",["253"],"no-negated-in-lhs",["254"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'PropTypes' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'offset' and 'onRequest'. Either include them or remove the dependency array.","ArrayExpression",["255"],"'MarvelService' is defined but never used.","React Hook useEffect has a missing dependency: 'updateChar'. Either include it or remove the dependency array.",["256"],"'logger' is defined but never used.","'secondLog' is defined but never used.",["257"],["258"],"React Hook useEffect has a missing dependency: 'updateData'. Either include it or remove the dependency array.",["259"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["260"],["261"],["262"],["263"],["264"],"no-global-assign","no-unsafe-negation",{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"265","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"272","fix":"274"},{"desc":"265","fix":"275"},{"desc":"265","fix":"276"},{"desc":"270","fix":"277"},{"desc":"267","fix":"278"},"Update the dependencies array to be: [offset, onRequest]",{"range":"279","text":"280"},"Update the dependencies array to be: [updateChar]",{"range":"281","text":"282"},{"range":"283","text":"280"},"Update the dependencies array to be: [props.charId, updateChar]",{"range":"284","text":"285"},"Update the dependencies array to be: [id, updateData]",{"range":"286","text":"287"},{"range":"288","text":"287"},{"range":"289","text":"280"},{"range":"290","text":"280"},{"range":"291","text":"285"},{"range":"292","text":"282"},[731,733],"[offset, onRequest]",[676,678],"[updateChar]",[762,764],[514,528],"[props.charId, updateChar]",[787,791],"[id, updateData]",[787,791],[731,733],[762,764],[514,528],[676,678]]