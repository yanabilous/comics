{"ast":null,"code":"var _jsxFileName = \"/Users/bilous/Projects/umka/marvel_starter/src/components/charSearchForm/CharSearchForm.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport \"./charSearchForm.scss\";\nimport { Formik, Form, Field, ErrorMessage, useField } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useState } from \"react\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MyTextInput = _ref => {\n  _s();\n\n  let {\n    label,\n    ...props\n  } = _ref;\n  const [meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(MyTextInput, \"uIP6W7KQMJ5n6XKRsavFApLlZXQ=\", false, function () {\n  return [useField];\n});\n\n_c = MyTextInput;\n\nconst CharSearchForm = props => {\n  _s2();\n\n  const [char, setChar] = useState(null);\n  const {\n    loading,\n    error,\n    getCharacterByName,\n    clearError\n  } = useMarvelService();\n\n  const onCharLoaded = char => {\n    setChar(char);\n  };\n\n  const updateChar = name => {\n    clearError();\n    getCharacterByName(name).then(onCharLoaded);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      name: \"\"\n    },\n    validationSchema: Yup.object({\n      name: Yup.string().min(5, 'Мінімум 5 символів').required(\"This field is required!\")\n    }),\n    onSubmit: values => console.log(JSON.stringify(values, null, 5)),\n    children: _ref2 => {\n      let {\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting\n        /* and other goodies */\n\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Form, {\n        className: \"char__search-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Or find a character by name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n          label: \"Enter name\",\n          id: \"name\",\n          name: \"name\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), errors['name'] && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors['name']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          className: \"error\",\n          name: \"text\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Find\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(CharSearchForm, \"rKKI6EzBaq1Mrm5UuOXddeQEnlY=\", false, function () {\n  return [useMarvelService];\n});\n\n_c2 = CharSearchForm;\nexport default CharSearchForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyTextInput\");\n$RefreshReg$(_c2, \"CharSearchForm\");","map":{"version":3,"names":["Formik","Form","Field","ErrorMessage","useField","Yup","useState","useMarvelService","MyTextInput","label","props","meta","name","touched","error","CharSearchForm","char","setChar","loading","getCharacterByName","clearError","onCharLoaded","updateChar","then","object","string","min","required","values","console","log","JSON","stringify","errors","handleChange","handleBlur","handleSubmit","isSubmitting"],"sources":["/Users/bilous/Projects/umka/marvel_starter/src/components/charSearchForm/CharSearchForm.js"],"sourcesContent":["import \"./charSearchForm.scss\";\nimport {Formik, Form, Field, ErrorMessage, useField} from \"formik\";\nimport * as Yup from \"yup\";\nimport {useState} from \"react\";\nimport useMarvelService from \"../../services/MarvelService\";\n\nconst MyTextInput = ({label, ...props}) => {\n    const [meta] = useField(props);\n    return (\n        <>\n            <label htmlFor={props.name}>{label}</label>\n            <input {...props}/>\n            {meta.touched && meta.error ? (\n                <div className=\"error\">{meta.error}</div>\n            ) : null}\n        </>\n    );\n\n};\nconst CharSearchForm = (props) => {\n\n    const [char, setChar] = useState(null);\n    const {loading, error, getCharacterByName, clearError} = useMarvelService();\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    };\n\n    const updateChar = (name) => {\n        clearError();\n        getCharacterByName(name)\n            .then(onCharLoaded);\n\n\n    };\n\n    return (\n\n        <Formik\n            initialValues={{\n                name: \"\"\n            }}\n            validationSchema={Yup.object({\n                name: Yup.string()\n                    .min(5, 'Мінімум 5 символів')\n                    .required(\"This field is required!\")\n            })}\n            onSubmit={values => console.log(JSON.stringify(values, null, 5))}\n        >\n       {({\n         values,\n         errors,\n         touched,\n         handleChange,\n         handleBlur,\n         handleSubmit,\n         isSubmitting,\n         /* and other goodies */\n       }) => (\n            <Form className=\"char__search-form\">\n                <h2>Or find a character by name:</h2>\n                {/*<input type={'text'}/>*/}\n                <MyTextInput\n                    label=\"Enter name\"\n                    id=\"name\"\n                    name=\"name\"\n                    type=\"text\"\n                />\n                {errors['name'] && (<p>{errors['name']}</p>)}\n                <ErrorMessage className=\"error\" name=\"text\" component=\"div\"/>\n                <button type=\"submit\">Find</button>\n                {/*<button type=\"submit\">Back to page</button>*/}\n            </Form>\n           )}\n        </Formik>\n    );\n\n};\n\n\nexport default CharSearchForm;\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}