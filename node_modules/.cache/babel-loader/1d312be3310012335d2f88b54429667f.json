{"ast":null,"code":"var _jsxFileName = \"/Users/bilous/Projects/umka/marvel_starter/src/components/charSearchForm/CharSearchForm.js\",\n    _s = $RefreshSig$();\n\nimport \"./charSearchForm.scss\";\nimport { Formik, Form, Field, ErrorMessage, useField } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useState } from \"react\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MyTextInput = _ref => {\n  _s();\n\n  let {\n    lable,\n    ...props\n  } = _ref;\n  const [meta] = useField(props);\n  const [char, setChar] = useState(null);\n  const {\n    loading,\n    error,\n    getAllCharacters,\n    clearError\n  } = useMarvelService();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.name,\n      children: lable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(MyTextInput, \"BGekiZJgo6DmUufrQT/UvS4Pm+Q=\", false, function () {\n  return [useField, useMarvelService];\n});\n\n_c = MyTextInput;\n\nconst CharSearchForm = props => {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      name: \"\"\n    },\n    validationSchema: Yup.object({\n      name: Yup.string().min(5).required(\"This field is required!\")\n    }),\n    onSubmit: values => console.log(JSON.stringify(values, null, 5)),\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"char__search-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Or find a character by name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n        lable: \"Enter name\",\n        id: \"name\",\n        name: \"name\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        className: \"error\",\n        name: \"text\",\n        component: \"div\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Find\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Back to page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = CharSearchForm;\nexport default CharSearchForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyTextInput\");\n$RefreshReg$(_c2, \"CharSearchForm\");","map":{"version":3,"names":["Formik","Form","Field","ErrorMessage","useField","Yup","useState","useMarvelService","MyTextInput","lable","props","meta","char","setChar","loading","error","getAllCharacters","clearError","name","touched","CharSearchForm","object","string","min","required","values","console","log","JSON","stringify"],"sources":["/Users/bilous/Projects/umka/marvel_starter/src/components/charSearchForm/CharSearchForm.js"],"sourcesContent":["import \"./charSearchForm.scss\";\nimport {Formik, Form, Field, ErrorMessage, useField} from \"formik\";\nimport * as Yup from \"yup\";\nimport {useState} from \"react\";\nimport useMarvelService from \"../../services/MarvelService\";\n\nconst MyTextInput = ({lable, ...props}) => {\n    const [meta] = useField(props);\n   const [char, setChar] = useState(null);\n   const {loading, error, getAllCharacters, clearError} = useMarvelService();\n\n    return (\n        <>\n            <label htmlFor={props.name}>{lable}</label>\n            <input {...props}/>\n            {meta.touched && meta.error ? (\n                <div className=\"error\">{meta.error}</div>\n            ) : null}\n        </>\n    );\n\n};\nconst CharSearchForm = (props) => {\n\n    return (\n        <Formik\n            initialValues={{\n                name: \"\"\n            }}\n            validationSchema={Yup.object({\n                name: Yup.string()\n                    .min(5)\n                    .required(\"This field is required!\")\n            })}\n            onSubmit={values => console.log(JSON.stringify(values, null, 5))}\n        >\n            <Form className=\"char__search-form\">\n                <h2>Or find a character by name:</h2>\n                <MyTextInput\n                    lable=\"Enter name\"\n                    id=\"name\"\n                    name=\"name\"\n                    type=\"text\"\n                />\n                <ErrorMessage className=\"error\" name=\"text\" component=\"div\"/>\n                <button type=\"submit\">Find</button>\n                <button type=\"submit\">Back to page</button>\n            </Form>\n        </Formik>\n\n    );\n\n};\n\n\nexport default CharSearchForm;\n\n\n\n\n\n\n\n"],"mappings":";;;AAAA,OAAO,uBAAP;AACA,SAAQA,MAAR,EAAgBC,IAAhB,EAAsBC,KAAtB,EAA6BC,YAA7B,EAA2CC,QAA3C,QAA0D,QAA1D;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;;;;AAEA,MAAMC,WAAW,GAAG,QAAuB;EAAA;;EAAA,IAAtB;IAACC,KAAD;IAAQ,GAAGC;EAAX,CAAsB;EACvC,MAAM,CAACC,IAAD,IAASP,QAAQ,CAACM,KAAD,CAAvB;EACD,MAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,IAAD,CAAhC;EACA,MAAM;IAACQ,OAAD;IAAUC,KAAV;IAAiBC,gBAAjB;IAAmCC;EAAnC,IAAiDV,gBAAgB,EAAvE;EAEC,oBACI;IAAA,wBACI;MAAO,OAAO,EAAEG,KAAK,CAACQ,IAAtB;MAAA,UAA6BT;IAA7B;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,sBAAWC;IAAX;MAAA;MAAA;MAAA;IAAA,QAFJ,EAGKC,IAAI,CAACQ,OAAL,IAAgBR,IAAI,CAACI,KAArB,gBACG;MAAK,SAAS,EAAC,OAAf;MAAA,UAAwBJ,IAAI,CAACI;IAA7B;MAAA;MAAA;MAAA;IAAA,QADH,GAEG,IALR;EAAA,gBADJ;AAUH,CAfD;;GAAMP,W;UACaJ,Q,EAEuCG,gB;;;KAHpDC,W;;AAgBN,MAAMY,cAAc,GAAIV,KAAD,IAAW;EAE9B,oBACI,QAAC,MAAD;IACI,aAAa,EAAE;MACXQ,IAAI,EAAE;IADK,CADnB;IAII,gBAAgB,EAAEb,GAAG,CAACgB,MAAJ,CAAW;MACzBH,IAAI,EAAEb,GAAG,CAACiB,MAAJ,GACDC,GADC,CACG,CADH,EAEDC,QAFC,CAEQ,yBAFR;IADmB,CAAX,CAJtB;IASI,QAAQ,EAAEC,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeJ,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAZ,CATxB;IAAA,uBAWI,QAAC,IAAD;MAAM,SAAS,EAAC,mBAAhB;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,WAAD;QACI,KAAK,EAAC,YADV;QAEI,EAAE,EAAC,MAFP;QAGI,IAAI,EAAC,MAHT;QAII,IAAI,EAAC;MAJT;QAAA;QAAA;QAAA;MAAA,QAFJ,eAQI,QAAC,YAAD;QAAc,SAAS,EAAC,OAAxB;QAAgC,IAAI,EAAC,MAArC;QAA4C,SAAS,EAAC;MAAtD;QAAA;QAAA;QAAA;MAAA,QARJ,eASI;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QATJ,eAUI;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVJ;IAAA;MAAA;MAAA;MAAA;IAAA;EAXJ;IAAA;IAAA;IAAA;EAAA,QADJ;AA4BH,CA9BD;;MAAML,c;AAiCN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}