{"ast":null,"code":"var _jsxFileName = \"/Users/bilous/Projects/umka/marvel_starter/src/components/charSearchForm/CharSearchForm.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport \"./charSearchForm.scss\";\nimport { Formik, Form, Field, ErrorMessage, useField } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useState } from \"react\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MyTextInput = _ref => {\n  _s();\n\n  let {\n    label,\n    ...props\n  } = _ref;\n  const [meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(MyTextInput, \"uIP6W7KQMJ5n6XKRsavFApLlZXQ=\", false, function () {\n  return [useField];\n});\n\n_c = MyTextInput;\n\nconst CharSearchForm = props => {\n  _s2();\n\n  const [char, setChar] = useState(null);\n  const {\n    loading,\n    error,\n    getCharacterByName,\n    clearError\n  } = useMarvelService();\n\n  const onCharLoaded = char => {\n    setChar(char);\n  };\n\n  const updateChar = name => {\n    clearError();\n    getCharacterByName(name).then(onCharLoaded);\n  };\n\n  const errorMessage = error ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"char__search-critical-error\",\n    children: /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 79\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 34\n  }, this) : null; // return (\n  //\n  //     <Formik\n  //         initialValues={{\n  //             name: \"\"\n  //         }}\n  //         validationSchema={Yup.object({\n  //             name: Yup.string()\n  //                 .min(5, 'Мінімум 5 символів')\n  //                 .required(\"This field is required!\")\n  //         })}\n  //         onSubmit={values => console.log(JSON.stringify(values, null, 5))}\n  //     >\n  //\n  //         <Form className=\"char__search-form\">\n  //             <h2>Or find a character by name:</h2>\n  //             {/*<input type={'text'}/>*/}\n  //             <MyTextInput\n  //                 label=\"Enter name\"\n  //                 id=\"name\"\n  //                 name=\"name\"\n  //                 type=\"text\"\n  //             />\n  //             <ErrorMessage className=\"error\" name=\"text\" component=\"div\"/>\n  //             <button type=\"submit\">Find</button>\n  //             {/*<button type=\"submit\">Back to page</button>*/}\n  //         </Form>\n  //     </Formik>\n  // );\n};\n\n_s2(CharSearchForm, \"rKKI6EzBaq1Mrm5UuOXddeQEnlY=\", false, function () {\n  return [useMarvelService];\n});\n\n_c2 = CharSearchForm;\nexport default CharSearchForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyTextInput\");\n$RefreshReg$(_c2, \"CharSearchForm\");","map":{"version":3,"names":["Formik","Form","Field","ErrorMessage","useField","Yup","useState","useMarvelService","MyTextInput","label","props","meta","name","touched","error","CharSearchForm","char","setChar","loading","getCharacterByName","clearError","onCharLoaded","updateChar","then","errorMessage"],"sources":["/Users/bilous/Projects/umka/marvel_starter/src/components/charSearchForm/CharSearchForm.js"],"sourcesContent":["import \"./charSearchForm.scss\";\nimport {Formik, Form, Field, ErrorMessage, useField} from \"formik\";\nimport * as Yup from \"yup\";\nimport {useState} from \"react\";\nimport useMarvelService from \"../../services/MarvelService\";\n\n\nconst MyTextInput = ({label, ...props}) => {\n    const [meta] = useField(props);\n    return (\n        <>\n            <label htmlFor={props.name}>{label}</label>\n            <input {...props}/>\n            {meta.touched && meta.error ? (\n                <div className=\"error\">{meta.error}</div>\n            ) : null}\n        </>\n    );\n\n};\nconst CharSearchForm = (props) => {\n\n    const [char, setChar] = useState(null);\n    const {loading, error, getCharacterByName, clearError} = useMarvelService();\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    };\n\n    const updateChar = (name) => {\n        clearError();\n        getCharacterByName(name)\n            .then(onCharLoaded);\n\n\n    };\n    const errorMessage = error ? <div className=\"char__search-critical-error\"><ErrorMessage /></div> : null;\n\n    // return (\n    //\n    //     <Formik\n    //         initialValues={{\n    //             name: \"\"\n    //         }}\n    //         validationSchema={Yup.object({\n    //             name: Yup.string()\n    //                 .min(5, 'Мінімум 5 символів')\n    //                 .required(\"This field is required!\")\n    //         })}\n    //         onSubmit={values => console.log(JSON.stringify(values, null, 5))}\n    //     >\n    //\n    //         <Form className=\"char__search-form\">\n    //             <h2>Or find a character by name:</h2>\n    //             {/*<input type={'text'}/>*/}\n    //             <MyTextInput\n    //                 label=\"Enter name\"\n    //                 id=\"name\"\n    //                 name=\"name\"\n    //                 type=\"text\"\n    //             />\n    //             <ErrorMessage className=\"error\" name=\"text\" component=\"div\"/>\n    //             <button type=\"submit\">Find</button>\n    //             {/*<button type=\"submit\">Back to page</button>*/}\n    //         </Form>\n    //     </Formik>\n    // );\n\n};\n\n\nexport default CharSearchForm;\n\n\n\n\n\n\n\n"],"mappings":";;;;AAAA,OAAO,uBAAP;AACA,SAAQA,MAAR,EAAgBC,IAAhB,EAAsBC,KAAtB,EAA6BC,YAA7B,EAA2CC,QAA3C,QAA0D,QAA1D;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;;;;AAGA,MAAMC,WAAW,GAAG,QAAuB;EAAA;;EAAA,IAAtB;IAACC,KAAD;IAAQ,GAAGC;EAAX,CAAsB;EACvC,MAAM,CAACC,IAAD,IAASP,QAAQ,CAACM,KAAD,CAAvB;EACA,oBACI;IAAA,wBACI;MAAO,OAAO,EAAEA,KAAK,CAACE,IAAtB;MAAA,UAA6BH;IAA7B;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,sBAAWC;IAAX;MAAA;MAAA;MAAA;IAAA,QAFJ,EAGKC,IAAI,CAACE,OAAL,IAAgBF,IAAI,CAACG,KAArB,gBACG;MAAK,SAAS,EAAC,OAAf;MAAA,UAAwBH,IAAI,CAACG;IAA7B;MAAA;MAAA;MAAA;IAAA,QADH,GAEG,IALR;EAAA,gBADJ;AAUH,CAZD;;GAAMN,W;UACaJ,Q;;;KADbI,W;;AAaN,MAAMO,cAAc,GAAIL,KAAD,IAAW;EAAA;;EAE9B,MAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,IAAD,CAAhC;EACA,MAAM;IAACY,OAAD;IAAUJ,KAAV;IAAiBK,kBAAjB;IAAqCC;EAArC,IAAmDb,gBAAgB,EAAzE;;EAEA,MAAMc,YAAY,GAAIL,IAAD,IAAU;IAC3BC,OAAO,CAACD,IAAD,CAAP;EACH,CAFD;;EAIA,MAAMM,UAAU,GAAIV,IAAD,IAAU;IACzBQ,UAAU;IACVD,kBAAkB,CAACP,IAAD,CAAlB,CACKW,IADL,CACUF,YADV;EAIH,CAND;;EAOA,MAAMG,YAAY,GAAGV,KAAK,gBAAG;IAAK,SAAS,EAAC,6BAAf;IAAA,uBAA6C,QAAC,YAAD;MAAA;MAAA;MAAA;IAAA;EAA7C;IAAA;IAAA;IAAA;EAAA,QAAH,GAAyE,IAAnG,CAhB8B,CAkB9B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAEH,CAhDD;;IAAMC,c;UAGuDR,gB;;;MAHvDQ,c;AAmDN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}