{"ast":null,"code":"import \"./charSearchForm.scss\";\nimport { Formik, Form, Field, ErrorMessage, useField } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useState } from \"react\";\nimport useMarvelService from \"../../services/MarvelService\"; // const MyTextInput = ({label, ...props}) => {\n//     const [meta] = useField(props);\n//     return (\n//         <>\n//             <label htmlFor={props.name}>{label}</label>\n//             <input {...props}/>\n//             {meta.touched && meta.error ? (\n//                 <div className=\"error\">{meta.error}</div>\n//             ) : null}\n//         </>\n//     );\n//\n// };\n// const CharSearchForm = (props) => {\n//\n//     const [char, setChar] = useState(null);\n//     const {loading, error, getCharacterByName, clearError} = useMarvelService();\n//\n//     const onCharLoaded = (char) => {\n//         setChar(char);\n//     };\n//\n//     const updateChar = (name) => {\n//         clearError();\n//         getCharacterByName(name)\n//             .then(onCharLoaded);\n//\n//\n//     };\n//     const errorMessage = error ? <div className=\"char__search-critical-error\"><ErrorMessage /></div> : null;\n//\n//     return (\n//\n//         <Formik\n//             initialValues={{\n//                 name: \"\"\n//             }}\n//             validationSchema={Yup.object({\n//                 name: Yup.string()\n//                     .min(5, 'Мінімум 5 символів')\n//                     .required(\"This field is required!\")\n//             })}\n//             onSubmit={values => console.log(JSON.stringify(values, null, 5))}\n//         >\n//\n//             <Form className=\"char__search-form\">\n//                 <h2>Or find a character by name:</h2>\n//                 {/*<input type={'text'}/>*/}\n//                 <MyTextInput\n//                     label=\"Enter name\"\n//                     id=\"name\"\n//                     name=\"name\"\n//                     type=\"text\"\n//                 />\n//                 <ErrorMessage className=\"error\" name=\"text\" component=\"div\"/>\n//                 <button type=\"submit\">Find</button>\n//                 {/*<button type=\"submit\">Back to page</button>*/}\n//             </Form>\n//         </Formik>\n//     );\n//\n// };\n//\n//\n// export default CharSearchForm;","map":{"version":3,"names":["Formik","Form","Field","ErrorMessage","useField","Yup","useState","useMarvelService"],"sources":["/Users/bilous/Projects/umka/marvel_starter/src/components/charSearchForm/CharSearchForm.js"],"sourcesContent":["import \"./charSearchForm.scss\";\nimport {Formik, Form, Field, ErrorMessage, useField} from \"formik\";\nimport * as Yup from \"yup\";\nimport {useState} from \"react\";\nimport useMarvelService from \"../../services/MarvelService\";\n\n\n// const MyTextInput = ({label, ...props}) => {\n//     const [meta] = useField(props);\n//     return (\n//         <>\n//             <label htmlFor={props.name}>{label}</label>\n//             <input {...props}/>\n//             {meta.touched && meta.error ? (\n//                 <div className=\"error\">{meta.error}</div>\n//             ) : null}\n//         </>\n//     );\n//\n// };\n// const CharSearchForm = (props) => {\n//\n//     const [char, setChar] = useState(null);\n//     const {loading, error, getCharacterByName, clearError} = useMarvelService();\n//\n//     const onCharLoaded = (char) => {\n//         setChar(char);\n//     };\n//\n//     const updateChar = (name) => {\n//         clearError();\n//         getCharacterByName(name)\n//             .then(onCharLoaded);\n//\n//\n//     };\n//     const errorMessage = error ? <div className=\"char__search-critical-error\"><ErrorMessage /></div> : null;\n//\n//     return (\n//\n//         <Formik\n//             initialValues={{\n//                 name: \"\"\n//             }}\n//             validationSchema={Yup.object({\n//                 name: Yup.string()\n//                     .min(5, 'Мінімум 5 символів')\n//                     .required(\"This field is required!\")\n//             })}\n//             onSubmit={values => console.log(JSON.stringify(values, null, 5))}\n//         >\n//\n//             <Form className=\"char__search-form\">\n//                 <h2>Or find a character by name:</h2>\n//                 {/*<input type={'text'}/>*/}\n//                 <MyTextInput\n//                     label=\"Enter name\"\n//                     id=\"name\"\n//                     name=\"name\"\n//                     type=\"text\"\n//                 />\n//                 <ErrorMessage className=\"error\" name=\"text\" component=\"div\"/>\n//                 <button type=\"submit\">Find</button>\n//                 {/*<button type=\"submit\">Back to page</button>*/}\n//             </Form>\n//         </Formik>\n//     );\n//\n// };\n//\n//\n// export default CharSearchForm;\n\n\n\n\n\n\n\n"],"mappings":"AAAA,OAAO,uBAAP;AACA,SAAQA,MAAR,EAAgBC,IAAhB,EAAsBC,KAAtB,EAA6BC,YAA7B,EAA2CC,QAA3C,QAA0D,QAA1D;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,gBAAP,MAA6B,8BAA7B,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}