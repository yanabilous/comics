{"ast":null,"code":"import _regeneratorRuntime from\"/Users/bilous/Projects/umka/marvel_starter/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/bilous/Projects/umka/marvel_starter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{useHttp}from\"../hooks/http.hook\";var useMarvelService=function useMarvelService(){var _useHttp=useHttp(),loading=_useHttp.loading,request=_useHttp.request,error=_useHttp.error,clearError=_useHttp.clearError;var _apiBase=\"https://gateway.marvel.com:443/v1/public/\";var _apiKey=\"apikey=26bf773b3288c2d35df092385ce05b83\";var _baseOffset=210;var getAllCharacters=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var offset,res,_args=arguments;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:offset=_args.length>0&&_args[0]!==undefined?_args[0]:_baseOffset;_context.next=3;return request(\"\".concat(_apiBase,\"characters?limit=9&offset=\").concat(offset,\"&\").concat(_apiKey));case 3:res=_context.sent;return _context.abrupt(\"return\",res.data.results.map(_transformCharacter));case 5:case\"end\":return _context.stop();}}},_callee);}));return function getAllCharacters(){return _ref.apply(this,arguments);};}();var getCharacter=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(id){var res;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return request(\"\".concat(_apiBase,\"characters/\").concat(id,\"?\").concat(_apiKey,\" \"));case 2:res=_context2.sent;return _context2.abrupt(\"return\",_transformCharacter(res.data.results[0]));case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function getCharacter(_x){return _ref2.apply(this,arguments);};}();var _transformCharacter=function _transformCharacter(char){return{id:char.id,name:char.name,description:char.description?\"\".concat(char.description.slice(0,210),\"...\"):\"There is no description for this character\",thumbnail:char.thumbnail.path+\".\"+char.thumbnail.extension,homepage:char.urls[0].url,wiki:char.urls[1].url,comics:char.comics.items};};return{loading:loading,error:error,getAllCharacters:getAllCharacters,getCharacter:getCharacter,clearError:clearError};};export default useMarvelService;","map":{"version":3,"names":["useHttp","useMarvelService","loading","request","error","clearError","_apiBase","_apiKey","_baseOffset","getAllCharacters","offset","res","data","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","url","wiki","comics","items"],"sources":["/Users/bilous/Projects/umka/marvel_starter/src/services/MarvelService.js"],"sourcesContent":["import {useHttp} from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n    const {loading, request, error, clearError} = useHttp();\n    const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\n    const _apiKey = \"apikey=26bf773b3288c2d35df092385ce05b83\";\n    const _baseOffset = 210;\n\n\n    const getAllCharacters = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter);\n    };\n    const getCharacter = async (id) => {\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey} `);\n        return _transformCharacter(res.data.results[0]);\n    };\n    const _transformCharacter = (char) => {\n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description ? `${char.description.slice(0, 210)}...` : \"There is no description for this character\",\n            thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items\n        };\n\n    };\n    return {loading, error, getAllCharacters, getCharacter, clearError};\n};\n\nexport default useMarvelService;"],"mappings":"gRAAA,OAAQA,OAAR,KAAsB,oBAAtB,CAEA,GAAMC,iBAAgB,CAAG,QAAnBA,iBAAmB,EAAM,CAC3B,aAA8CD,OAAO,EAArD,CAAOE,OAAP,UAAOA,OAAP,CAAgBC,OAAhB,UAAgBA,OAAhB,CAAyBC,KAAzB,UAAyBA,KAAzB,CAAgCC,UAAhC,UAAgCA,UAAhC,CACA,GAAMC,SAAQ,CAAG,2CAAjB,CACA,GAAMC,QAAO,CAAG,yCAAhB,CACA,GAAMC,YAAW,CAAG,GAApB,CAGA,GAAMC,iBAAgB,4FAAG,oKAAOC,MAAP,+CAAgBF,WAAhB,uBACHL,QAAO,WAAIG,QAAJ,sCAAyCI,MAAzC,aAAmDH,OAAnD,EADJ,QACfI,GADe,+CAEdA,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiBC,GAAjB,CAAqBC,mBAArB,CAFc,wDAAH,kBAAhBN,iBAAgB,0CAAtB,CAIA,GAAMO,aAAY,6FAAG,kBAAOC,EAAP,uJACCd,QAAO,WAAIG,QAAJ,uBAA0BW,EAA1B,aAAgCV,OAAhC,MADR,QACXI,GADW,iDAEVI,mBAAmB,CAACJ,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiB,CAAjB,CAAD,CAFT,0DAAH,kBAAZG,aAAY,6CAAlB,CAIA,GAAMD,oBAAmB,CAAG,QAAtBA,oBAAsB,CAACG,IAAD,CAAU,CAClC,MAAO,CACHD,EAAE,CAAEC,IAAI,CAACD,EADN,CAEHE,IAAI,CAAED,IAAI,CAACC,IAFR,CAGHC,WAAW,CAAEF,IAAI,CAACE,WAAL,WAAsBF,IAAI,CAACE,WAAL,CAAiBC,KAAjB,CAAuB,CAAvB,CAA0B,GAA1B,CAAtB,QAA4D,4CAHtE,CAIHC,SAAS,CAAEJ,IAAI,CAACI,SAAL,CAAeC,IAAf,CAAsB,GAAtB,CAA4BL,IAAI,CAACI,SAAL,CAAeE,SAJnD,CAKHC,QAAQ,CAAEP,IAAI,CAACQ,IAAL,CAAU,CAAV,EAAaC,GALpB,CAMHC,IAAI,CAAEV,IAAI,CAACQ,IAAL,CAAU,CAAV,EAAaC,GANhB,CAOHE,MAAM,CAAEX,IAAI,CAACW,MAAL,CAAYC,KAPjB,CAAP,CAUH,CAXD,CAYA,MAAO,CAAC5B,OAAO,CAAPA,OAAD,CAAUE,KAAK,CAALA,KAAV,CAAiBK,gBAAgB,CAAhBA,gBAAjB,CAAmCO,YAAY,CAAZA,YAAnC,CAAiDX,UAAU,CAAVA,UAAjD,CAAP,CACH,CA5BD,CA8BA,cAAeJ,iBAAf"},"metadata":{},"sourceType":"module"}