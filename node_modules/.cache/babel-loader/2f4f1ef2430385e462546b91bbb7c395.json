{"ast":null,"code":"var _jsxFileName = \"/Users/bilous/Projects/umka/marvel_starter/src/components/charList/CharList.js\",\n    _s = $RefreshSig$();\n\nimport \"./charList.scss\";\nimport { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CharList = props => {\n  _s();\n\n  console.log(\"CharList\");\n  const [charList, setCharList] = useState([]);\n  const {\n    loading,\n    error,\n    getAllCharacters\n  } = useMarvelService();\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [charEnded, setCharEnded] = useState(false);\n  useEffect(() => {\n    console.log(\"useEffect\");\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    console.log(\"onRequest\");\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n    getAllCharacters(offset).then(onCharListLoaded);\n  };\n\n  const onCharListLoaded = newCharList => {\n    let ended = false;\n\n    if (newCharList.length < 9) {\n      ended = true;\n    }\n\n    setCharList(charList => [...charList, ...newCharList]); // setCharList(newCharList);\n    // setCharList(newCharList);\n\n    setNewItemLoading(newItemLoading => false);\n    setOffset(offset => offset + 9);\n    setCharEnded(charEnded => ended);\n  };\n\n  const itemRefs = useRef([]);\n\n  const focusOnItem = id => {\n    // Я реализовал вариант чуть сложнее, и с классом и с фокусом\n    // Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\n    // На самом деле, решение с css-классом можно сделать, вынеся персонажа\n    // в отдельный компонент. Но кода будет больше, появится новое состояние\n    // и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\n    // По возможности, не злоупотребляйте рефами, только в крайних случаях\n    itemRefs.current.forEach(item => item.classList.remove(\"char__item_selected\"));\n    itemRefs.current[id].classList.add(\"char__item_selected\");\n    itemRefs.current[id].focus();\n  }; // Этот метод создан для оптимизации,\n  // чтобы не помещать такую конструкцию в метод render\n\n\n  function renderItems(arr) {\n    console.log(arr.length);\n    const items = arr.map((item, i) => {\n      let imgStyle = {\n        \"objectFit\": \"cover\"\n      };\n\n      if (item.thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") {\n        imgStyle = {\n          \"objectFit\": \"unset\"\n        };\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"char__item\",\n        tabIndex: 0,\n        ref: el => itemRefs.current[i] = el,\n        onClick: () => {\n          props.onCharSelected(item.id);\n          focusOnItem(i);\n        },\n        onKeyPress: e => {\n          if (e.key === \" \" || e.key === \"Enter\") {\n            props.onCharSelected(item.id);\n            focusOnItem(i);\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.thumbnail,\n          alt: item.name,\n          style: imgStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__name\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__grid\",\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this);\n  }\n\n  const items = renderItems(charList); // const items = <span>123</span>;\n\n  const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 34\n  }, this) : null;\n  const spinner = loading && !newItemLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 50\n  }, this) : null;\n\n  if (loading) {\n    import('./someFunk').then();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"char__list\",\n    children: [errorMessage, spinner, items, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button button__main button__long\",\n      disabled: newItemLoading,\n      style: {\n        \"display\": charEnded ? \"none\" : \"block\"\n      },\n      onClick: () => onRequest(offset),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: \"load more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this); // return (\n  //     <div className=\"char__list\">\n  //         <ul className=\"char__grid\">\n  //             <li className=\"char__item\">\n  //                 <img src={abyss} alt=\"abyss\"/>\n  //                 <div className=\"char__name\">Abyss</div>\n  //             </li>\n  //             <li className=\"char__item char__item_selected\">\n  //                 <img src={abyss} alt=\"abyss\"/>\n  //                 <div className=\"char__name\">Abyss</div>\n  //             </li>\n  //             <li className=\"char__item\">\n  //                 <img src={abyss} alt=\"abyss\"/>\n  //                 <div className=\"char__name\">Abyss</div>\n  //             </li>\n  //             <li className=\"char__item\">\n  //                 <img src={abyss} alt=\"abyss\"/>\n  //                 <div className=\"char__name\">Abyss</div>\n  //             </li>\n  //             <li className=\"char__item\">\n  //                 <img src={abyss} alt=\"abyss\"/>\n  //                 <div className=\"char__name\">Abyss</div>\n  //             </li>\n  //             <li className=\"char__item\">\n  //                 <img src={abyss} alt=\"abyss\"/>\n  //                 <div className=\"char__name\">Abyss</div>\n  //             </li>\n  //             <li className=\"char__item\">\n  //                 <img src={abyss} alt=\"abyss\"/>\n  //                 <div className=\"char__name\">Abyss</div>\n  //             </li>\n  //             <li className=\"char__item\">\n  //                 <img src={abyss} alt=\"abyss\"/>\n  //                 <div className=\"char__name\">Abyss</div>\n  //             </li>\n  //             <li className=\"char__item\">\n  //                 <img src={abyss} alt=\"abyss\"/>\n  //                 <div className=\"char__name\">Abyss</div>\n  //             </li>\n  //         </ul>\n  //         <button className=\"button button__main button__long\">\n  //             <div className=\"inner\">load more</div>\n  //         </button>\n  //     </div>\n  // )\n};\n\n_s(CharList, \"dNOoja8iRMkV4FfrZ31wh4ItmOo=\", false, function () {\n  return [useMarvelService];\n});\n\n_c = CharList;\nCharList.propTypes = {\n  onCharSelected: PropTypes.func.isRequired\n};\nexport default CharList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharList\");","map":{"version":3,"names":["useState","useEffect","useRef","PropTypes","Spinner","ErrorMessage","useMarvelService","CharList","props","console","log","charList","setCharList","loading","error","getAllCharacters","newItemLoading","setNewItemLoading","offset","setOffset","charEnded","setCharEnded","onRequest","initial","then","onCharListLoaded","newCharList","ended","length","itemRefs","focusOnItem","id","current","forEach","item","classList","remove","add","focus","renderItems","arr","items","map","i","imgStyle","thumbnail","el","onCharSelected","e","key","name","errorMessage","spinner","propTypes","func","isRequired"],"sources":["/Users/bilous/Projects/umka/marvel_starter/src/components/charList/CharList.js"],"sourcesContent":["import \"./charList.scss\";\nimport {useState, useEffect, useRef} from \"react\";\nimport PropTypes from \"prop-types\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport useMarvelService from \"../../services/MarvelService\";\n\n\nconst CharList = (props) => {\n    console.log(\"CharList\");\n    const [charList, setCharList] = useState([]);\n    const {loading, error, getAllCharacters} = useMarvelService();\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [charEnded, setCharEnded] = useState(false);\n\n\n    useEffect(() => {\n        console.log(\"useEffect\");\n        onRequest(offset, true);\n    }, []);\n\n\n    const onRequest = (offset, initial) => {\n        console.log(\"onRequest\");\n        initial ? setNewItemLoading(false) : setNewItemLoading(true)\n        getAllCharacters(offset)\n            .then(onCharListLoaded);\n\n    };\n\n\n    const onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n        setCharList(charList => [...charList, ...newCharList]);\n        // setCharList(newCharList);\n        // setCharList(newCharList);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 9);\n        setCharEnded(charEnded => ended);\n    };\n\n\n    const itemRefs = useRef([]);\n\n    const focusOnItem = (id) => {\n        // Я реализовал вариант чуть сложнее, и с классом и с фокусом\n        // Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\n        // На самом деле, решение с css-классом можно сделать, вынеся персонажа\n        // в отдельный компонент. Но кода будет больше, появится новое состояние\n        // и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\n\n        // По возможности, не злоупотребляйте рефами, только в крайних случаях\n        itemRefs.current.forEach(item => item.classList.remove(\"char__item_selected\"));\n        itemRefs.current[id].classList.add(\"char__item_selected\");\n        itemRefs.current[id].focus();\n    };\n\n    // Этот метод создан для оптимизации,\n    // чтобы не помещать такую конструкцию в метод render\n\n    function renderItems(arr) {\n        console.log(arr.length);\n        const items = arr.map((item, i) => {\n            let imgStyle = {\"objectFit\": \"cover\"};\n            if (item.thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") {\n                imgStyle = {\"objectFit\": \"unset\"};\n            }\n\n            return (\n                <li\n                    className=\"char__item\"\n                    tabIndex={0}\n                    ref={el => itemRefs.current[i] = el}\n                    key={item.id}\n                    onClick={() => {\n                        props.onCharSelected(item.id);\n                        focusOnItem(i);\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === \" \" || e.key === \"Enter\") {\n                            props.onCharSelected(item.id);\n                            focusOnItem(i);\n                        }\n                    }}>\n                    <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                    <div className=\"char__name\">{item.name}</div>\n\n                </li>\n            );\n        });\n\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        );\n    }\n\n    const items = renderItems(charList);\n    // const items = <span>123</span>;\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\nif(loading) {\n    import('./someFunk')\n        .then()\n}\n    return (\n\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button\n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{\"display\": charEnded ? \"none\" : \"block\"}}\n                onClick={() => onRequest(offset)}\n            >\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    );\n\n\n    // return (\n    //     <div className=\"char__list\">\n    //         <ul className=\"char__grid\">\n    //             <li className=\"char__item\">\n    //                 <img src={abyss} alt=\"abyss\"/>\n    //                 <div className=\"char__name\">Abyss</div>\n    //             </li>\n    //             <li className=\"char__item char__item_selected\">\n    //                 <img src={abyss} alt=\"abyss\"/>\n    //                 <div className=\"char__name\">Abyss</div>\n    //             </li>\n    //             <li className=\"char__item\">\n    //                 <img src={abyss} alt=\"abyss\"/>\n    //                 <div className=\"char__name\">Abyss</div>\n    //             </li>\n    //             <li className=\"char__item\">\n    //                 <img src={abyss} alt=\"abyss\"/>\n    //                 <div className=\"char__name\">Abyss</div>\n    //             </li>\n    //             <li className=\"char__item\">\n    //                 <img src={abyss} alt=\"abyss\"/>\n    //                 <div className=\"char__name\">Abyss</div>\n    //             </li>\n    //             <li className=\"char__item\">\n    //                 <img src={abyss} alt=\"abyss\"/>\n    //                 <div className=\"char__name\">Abyss</div>\n    //             </li>\n    //             <li className=\"char__item\">\n    //                 <img src={abyss} alt=\"abyss\"/>\n    //                 <div className=\"char__name\">Abyss</div>\n    //             </li>\n    //             <li className=\"char__item\">\n    //                 <img src={abyss} alt=\"abyss\"/>\n    //                 <div className=\"char__name\">Abyss</div>\n    //             </li>\n    //             <li className=\"char__item\">\n    //                 <img src={abyss} alt=\"abyss\"/>\n    //                 <div className=\"char__name\">Abyss</div>\n    //             </li>\n    //         </ul>\n    //         <button className=\"button button__main button__long\">\n    //             <div className=\"inner\">load more</div>\n    //         </button>\n    //     </div>\n    // )\n};\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n};\n\nexport default CharList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}